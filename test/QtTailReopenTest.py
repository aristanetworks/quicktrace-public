#!/usr/bin/env python3
# Copyright (c) 2020 Arista Networks, Inc.  All rights reserved.
# Arista Networks, Inc. Confidential and Proprietary.

"""Verifies that qttail follows the new log file once it is reopened.
The test opens the logfile initially in the child process, then starts qttail in
the parent process to follow it. After that it opens the log file in the parent
process, thus resetting it. qttail is expected to catch this reset and start emitting
any message that is logged afterwards."""

from __future__ import absolute_import, division, print_function

import os
import subprocess
from QuickTrace import initialize, trace9
from QtTailTest import spawn

# setup
qtfile = "/tmp/qttail_reopen.qt"
pid = os.fork()
if pid == 0:
   # create initial file in child process
   initialize( qtfile )
   trace9( "test message" )
else:
   # reopen test in parent process
   os.wait4( pid, 0 )
   qttail = spawn( "qttail -x %s" % qtfile )
   qttail.expect( "--- opened %s" % qtfile )
   initialize( qtfile ) # reset the existing log file
   msg = "message after reopen"
   trace9( msg )
   qttail.expect( "--- re-opened %s" % qtfile )
   qttail.expect( r'9 \+\d+ "%s"' % msg )
   # qttail fd leak check
   numOpenFiles = 0
   output = subprocess.check_output( [ "lsof", "-p", str( qttail.pid ), "-a",
                                       "-d", "0-1023" ],
                                     stderr=subprocess.STDOUT )
   for line in str( output ).split( "\n" ):
      if qtfile in line:
         numOpenFiles += 1
   assert numOpenFiles == 1
